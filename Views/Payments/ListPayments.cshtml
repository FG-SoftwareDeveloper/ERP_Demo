@{
    Layout = "_Layout";
    // Example data for static design; replace with your model in production
    var payments = new[] {
        new { PaymentID = 1, Payee = "Acme Supplies", Type = "Vendor", Status = "Completed", Amount = 12000m, Date = DateTime.Parse("2025-08-28"), Method = "ACH", Reference = "INV-2025-001", AIInsights = "On time, matches invoice." },
        new { PaymentID = 2, Payee = "Global Paper", Type = "Vendor", Status = "Pending", Amount = 8000m, Date = DateTime.Parse("2025-08-30"), Method = "Wire", Reference = "INV-2025-002", AIInsights = "Pending approval, flagged for review." },
        new { PaymentID = 3, Payee = "John Doe", Type = "Employee", Status = "Completed", Amount = 3500m, Date = DateTime.Parse("2025-08-25"), Method = "Check", Reference = "EXP-2025-003", AIInsights = "Expense reimbursement, within policy." }
    };
}

<h2 class="h1 fw-bold themed-heading mb-4 border-bottom pb-2">Payments</h2>

<!-- KPI Cards Row -->
<div class="row g-4 mb-4">
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-primary"><i class="bi bi-credit-card"></i></span>
                    <h5 class="card-title mb-0">Total Payments</h5>
                </div>
                <div class="display-5 fw-bold text-primary mb-1">@payments.Length</div>
                <div class="text-muted">Completed: @payments.Count(p => p.Status == "Completed")</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-success"><i class="bi bi-currency-dollar"></i></span>
                    <h5 class="card-title mb-0">Total Amount</h5>
                </div>
                <div class="display-5 fw-bold text-success mb-1">@payments.Sum(p => p.Amount).ToString("C")</div>
                <div class="text-muted">Pending: @payments.Count(p => p.Status == "Pending")</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-warning"><i class="bi bi-exclamation-triangle"></i></span>
                    <h5 class="card-title mb-0">Flagged Payments</h5>
                </div>
                <div class="display-5 fw-bold text-warning mb-1">@payments.Count(p => p.AIInsights.Contains("flagged"))</div>
                <div class="text-muted">Review Needed: @payments.Count(p => p.Status == "Pending")</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-info"><i class="bi bi-person"></i></span>
                    <h5 class="card-title mb-0">Payees</h5>
                </div>
                <div class="display-5 fw-bold text-info mb-1">@payments.Select(p => p.Payee).Distinct().Count()</div>
                <div class="text-muted">Types: @payments.Select(p => p.Type).Distinct().Count()</div>
            </div>
        </div>
    </div>
</div>

<!-- AI Forecast Widget (High Contrast) -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-lg border-0" style="background: linear-gradient(90deg,#e3e6f0 0%,#f8fafc 100%);">
            <div class="card-body p-4">
                <div class="d-flex flex-column flex-md-row align-items-md-center justify-content-between">
                    <div>
                        <h5 class="mb-2 text-dark"><i class="bi bi-lightbulb me-2"></i>AI Forecast: Next Month Payment Volume</h5>
                        <div class="fs-2 fw-bold text-dark">+8 payments</div>
                        <div class="small text-dark">Based on historical payment cycles, vendor schedules, and expense trends.</div>
                    </div>
                    <div class="mt-3 mt-md-0">
                        <span class="badge rounded-pill bg-primary bg-opacity-10 text-primary fs-6 px-4 py-2 shadow-sm">Projected Amount: $45,000</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- BI Chart Placeholder -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-white">
                <h5 class="mb-0">Payment Trend (BI Chart)</h5>
            </div>
            <div class="card-body text-center">
                <img src="https://via.placeholder.com/600x200?text=Payment+Trend+Chart" alt="Payment Trend Chart" class="img-fluid rounded" />
            </div>
        </div>
    </div>
</div>

<!-- Payments Table -->
<div class="row">
    <div class="col-12">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-white">
                <h5 class="mb-0">Payments List</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>#</th>
                                <th>Payee</th>
                                <th>Type</th>
                                <th>Status</th>
                                <th>Amount</th>
                                <th>Date</th>
                                <th>Method</th>
                                <th>Reference</th>
                                <th>AI Insights</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in payments.OrderByDescending(p => p.Date))
                            {
                                <tr>
                                    <td>@p.PaymentID</td>
                                    <td class="fw-semibold">@p.Payee</td>
                                    <td>@p.Type</td>
                                    <td>
                                        @if (p.Status == "Completed")
                                        {
                                            <span class="badge bg-success">Completed</span>
                                        }
                                        else if (p.Status == "Pending")
                                        {
                                            <span class="badge bg-warning text-dark">Pending</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">@p.Status</span>
                                        }
                                    </td>
                                    <td>@p.Amount.ToString("C")</td>
                                    <td>@p.Date.ToString("yyyy-MM-dd")</td>
                                    <td>@p.Method</td>
                                    <td>@p.Reference</td>
                                    <td>
                                        @if (p.AIInsights.Contains("flagged"))
                                        {
                                            <span class="text-danger">@p.AIInsights</span>
                                        }
                                        else if (p.AIInsights.Contains("on time") || p.AIInsights.Contains("within policy"))
                                        {
                                            <span class="text-success">@p.AIInsights</span>
                                        }
                                        else if (p.AIInsights.Contains("review"))
                                        {
                                            <span class="text-warning">@p.AIInsights</span>
                                        }
                                        else
                                        {
                                            <span class="text-primary">@p.AIInsights</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>