@{
    Layout = "_Layout";
    // Example data for static design; replace with your model in production
    var payrollRuns = new[] {
        new { PayrollRunID = 1, Period = "Aug 2025", Status = "Completed", Employees = 120, TotalGross = 180000m, TotalNet = 145000m, Date = DateTime.Parse("2025-08-31"), AIInsights = "All employees paid on time. No anomalies detected." },
        new { PayrollRunID = 2, Period = "Jul 2025", Status = "Completed", Employees = 118, TotalGross = 175000m, TotalNet = 140000m, Date = DateTime.Parse("2025-07-31"), AIInsights = "2 late payments flagged. Review recommended." },
        new { PayrollRunID = 3, Period = "Jun 2025", Status = "Pending", Employees = 119, TotalGross = 178000m, TotalNet = 143000m, Date = DateTime.Parse("2025-06-30"), AIInsights = "Pending approval. Net pay matches forecast." }
    };
}

<h2 class="h1 fw-bold themed-heading mb-4 border-bottom pb-2">Payroll Runs</h2>

<!-- KPI Cards Row -->
<div class="row g-4 mb-4">
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-primary"><i class="bi bi-calculator"></i></span>
                    <h5 class="card-title mb-0">Total Runs</h5>
                </div>
                <div class="display-5 fw-bold text-primary mb-1">@payrollRuns.Length</div>
                <div class="text-muted">Completed: @payrollRuns.Count(p => p.Status == "Completed")</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-success"><i class="bi bi-currency-dollar"></i></span>
                    <h5 class="card-title mb-0">Total Gross</h5>
                </div>
                <div class="display-5 fw-bold text-success mb-1">@payrollRuns.Sum(p => p.TotalGross).ToString("C")</div>
                <div class="text-muted">Last: @payrollRuns.OrderByDescending(p => p.Date).First().TotalGross.ToString("C")</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-info"><i class="bi bi-cash-stack"></i></span>
                    <h5 class="card-title mb-0">Total Net</h5>
                </div>
                <div class="display-5 fw-bold text-info mb-1">@payrollRuns.Sum(p => p.TotalNet).ToString("C")</div>
                <div class="text-muted">Last: @payrollRuns.OrderByDescending(p => p.Date).First().TotalNet.ToString("C")</div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card shadow-sm border-0 h-100">
            <div class="card-body">
                <div class="d-flex align-items-center mb-2">
                    <span class="me-2 fs-3 text-warning"><i class="bi bi-people"></i></span>
                    <h5 class="card-title mb-0">Employees Paid</h5>
                </div>
                <div class="display-5 fw-bold text-warning mb-1">@payrollRuns.OrderByDescending(p => p.Date).First().Employees</div>
                <div class="text-muted">Avg. per Run: @(payrollRuns.Average(p => p.Employees))</div>
            </div>
        </div>
    </div>
</div>

<!-- AI Forecast Widget (High Contrast) -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-lg border-0" style="background: linear-gradient(90deg,#e3e6f0 0%,#f8fafc 100%);">
            <div class="card-body p-4">
                <div class="d-flex flex-column flex-md-row align-items-md-center justify-content-between">
                    <div>
                        <h5 class="mb-2 text-dark"><i class="bi bi-lightbulb me-2"></i>AI Forecast: Next Payroll Net Pay</h5>
                        <div class="fs-2 fw-bold text-dark">$146,000</div>
                        <div class="small text-dark">Based on historical payroll, new hires, and deduction trends.</div>
                    </div>
                    <div class="mt-3 mt-md-0">
                        <span class="badge rounded-pill bg-primary bg-opacity-10 text-primary fs-6 px-4 py-2 shadow-sm">Projected Employees: 122</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- BI Chart Placeholder -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-white">
                <h5 class="mb-0">Payroll Trend (BI Chart)</h5>
            </div>
            <div class="card-body text-center">
                <img src="https://via.placeholder.com/600x200?text=Payroll+Trend+Chart" alt="Payroll Trend Chart" class="img-fluid rounded" />
            </div>
        </div>
    </div>
</div>

<!-- Payroll Runs Table -->
<div class="row">
    <div class="col-12">
        <div class="card shadow-sm border-0">
            <div class="card-header bg-white">
                <h5 class="mb-0">Payroll Runs List</h5>
            </div>
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>#</th>
                                <th>Period</th>
                                <th>Status</th>
                                <th>Employees</th>
                                <th>Total Gross</th>
                                <th>Total Net</th>
                                <th>Date</th>
                                <th>AI Insights</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var p in payrollRuns.OrderByDescending(p => p.Date))
                            {
                                <tr>
                                    <td>@p.PayrollRunID</td>
                                    <td class="fw-semibold">@p.Period</td>
                                    <td>
                                        @if (p.Status == "Completed")
                                        {
                                            <span class="badge bg-success">Completed</span>
                                        }
                                        else if (p.Status == "Pending")
                                        {
                                            <span class="badge bg-warning text-dark">Pending</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">@p.Status</span>
                                        }
                                    </td>
                                    <td>@p.Employees</td>
                                    <td>@p.TotalGross.ToString("C")</td>
                                    <td>@p.TotalNet.ToString("C")</td>
                                    <td>@p.Date.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        @if (p.AIInsights.Contains("anomalies"))
                                        {
                                            <span class="text-danger">@p.AIInsights</span>
                                        }
                                        else if (p.AIInsights.Contains("flagged"))
                                        {
                                            <span class="text-warning">@p.AIInsights</span>
                                        }
                                        else if (p.AIInsights.Contains("on time") || p.AIInsights.Contains("matches forecast"))
                                        {
                                            <span class="text-success">@p.AIInsights</span>
                                        }
                                        else
                                        {
                                            <span class="text-primary">@p.AIInsights</span>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>